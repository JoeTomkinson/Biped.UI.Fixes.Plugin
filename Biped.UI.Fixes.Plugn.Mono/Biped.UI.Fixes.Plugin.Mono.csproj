<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.1</TargetFramework>
		<AssemblyName>Biped.UI.Fixes.Plugin.Mono</AssemblyName>
		<Product>BiPed UI Fixes Plugin</Product>
		<Version>1.0.1</Version>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<LangVersion>latest</LangVersion>
		<RestoreAdditionalProjectSources>
			https://api.nuget.org/v3/index.json;
			https://nuget.bepinex.dev/v3/index.json;
			https://nuget.samboy.dev/v3/index.json
		</RestoreAdditionalProjectSources>
		<RootNamespace>Biped.UI.Fixes.Plugin.Mono</RootNamespace>
		<Platforms>AnyCPU;x64;x86</Platforms>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all" />
		<PackageReference Include="BepInEx.Unity.Mono" Version="6.0.0-be.*" IncludeAssets="compile" />
		<PackageReference Include="BepInEx.PluginInfoProps" Version="2.*" />
		<PackageReference Include="UnityEngine.Modules" Version="2022.3.20" IncludeAssets="compile" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
		<PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="packaging\releases\" />
	</ItemGroup>

	<ItemGroup>
		<Reference Include="Assembly-CSharp">
			<HintPath>libs\Assembly-CSharp.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.UI">
			<HintPath>libs\UnityEngine.UI.dll</HintPath>
		</Reference>
	</ItemGroup>

	<Target Name="AfterBuildCustom_x86" AfterTargets="Build" Condition="'$(Platform)'=='x86'">
		<Message Text="AfterBuild target executing for x896" Importance="high" />

		<MakeDir Directories="$(SolutionDir)packaging\releases\raw\x86" />


		<!-- Clean up any previous temporary extraction folders -->
		<RemoveDir Directories="$(SolutionDir)packaging\releases\FinalTemp32" Condition="Exists('$(SolutionDir)packaging\releases\FinalTemp32')" />

		<!-- Process 32-bit release package -->
		<Message Text="Packaging 32-bit release" Importance="high" />
		<!-- Identify the 32-bit BepInEx stable zip -->
		<ItemGroup>
			<BepInExStableZip32 Include="$(SolutionDir)packaging\bepinex\32bit\*.zip" />
		</ItemGroup>
		<!-- Extract the 32-bit stable zip into a temporary folder -->
		<Exec Command="powershell -Command &quot;Expand-Archive -Path '&quot;%(BepInExStableZip32.Identity)&quot;' -DestinationPath '$(SolutionDir)packaging\releases\FinalTemp32' -Force&quot;" />
		<!-- Create the plugins folder under the extracted BepInEx directory -->
		<MakeDir Directories="$(SolutionDir)packaging\releases\FinalTemp32\BepInEx\plugins" />
		<!-- Copy the built 32-bit plugin DLL into the plugins folder -->
		<Copy SourceFiles="$(SolutionDir)bin\x86\Release\netstandard2.1\$(TargetFileName)" DestinationFolder="$(SolutionDir)packaging\releases\FinalTemp32\BepInEx\plugins" />
		<!-- Also copy the raw 32-bit DLL for reference -->
		<Copy SourceFiles="$(SolutionDir)bin\x86\Release\netstandard2.1\$(TargetFileName)" DestinationFolder="$(SolutionDir)packaging\releases\raw\x86" />
		<!-- Zip the entire extracted folder (preserving the top-level BepInEx folder) with version and architecture appended -->
		<Exec Command="powershell -Command &quot;Compress-Archive -Path '$(SolutionDir)packaging\releases\FinalTemp32\*' -DestinationPath '$(SolutionDir)packaging\releases\BipedWideScreenFix-$(Version)-x86.zip' -Force&quot;" />
		<!-- Clean up the temporary folder for 32-bit -->
		<RemoveDir Directories="$(SolutionDir)packaging\releases\FinalTemp32" />
	</Target>

	<Target Name="AfterBuildCustom_x64" AfterTargets="Build" Condition="'$(Platform)'=='x64'">
		<Message Text="AfterBuild target executing for x64" Importance="high" />

		<MakeDir Directories="$(SolutionDir)packaging\releases\raw\x64" />

		<!-- Clean up any previous temporary extraction folders -->
		<RemoveDir Directories="$(SolutionDir)packaging\releases\FinalTemp64" Condition="Exists('$(SolutionDir)packaging\releases\FinalTemp64')" />

		<!-- Process 64-bit release package -->
		<Message Text="Packaging 64-bit release" Importance="high" />
		<!-- Identify the 64-bit BepInEx stable zip -->
		<ItemGroup>
			<BepInExStableZip64 Include="$(SolutionDir)packaging\bepinex\64bit\*.zip" />
		</ItemGroup>
		<!-- Extract the 64-bit stable zip into a temporary folder -->
		<Exec Command="powershell -Command &quot;Expand-Archive -Path '&quot;%(BepInExStableZip64.Identity)&quot;' -DestinationPath '$(SolutionDir)packaging\releases\FinalTemp64' -Force&quot;" />
		<!-- Create the plugins folder under the extracted BepInEx directory -->
		<MakeDir Directories="$(SolutionDir)packaging\releases\FinalTemp64\BepInEx\plugins" />
		<!-- Copy the built 64-bit plugin DLL into the plugins folder -->
		<Copy SourceFiles="$(SolutionDir)bin\x64\Release\netstandard2.1\$(TargetFileName)" DestinationFolder="$(SolutionDir)packaging\releases\FinalTemp64\BepInEx\plugins" />
		<!-- Also copy the raw 64-bit DLL for reference -->
		<Copy SourceFiles="$(SolutionDir)bin\x64\Release\netstandard2.1\$(TargetFileName)" DestinationFolder="$(SolutionDir)packaging\releases\raw\x64" />
		<!-- Zip the entire extracted folder (preserving the top-level BepInEx folder) with version and architecture appended -->
		<Exec Command="powershell -Command &quot;Compress-Archive -Path '$(SolutionDir)packaging\releases\FinalTemp64\*' -DestinationPath '$(SolutionDir)packaging\releases\BipedWideScreenFix-$(Version)-x64.zip' -Force&quot;" />
		<!-- Clean up the temporary folder for 64-bit -->
		<RemoveDir Directories="$(SolutionDir)packaging\releases\FinalTemp64" />
	</Target>

</Project>
